const jwt = require('jsonwebtoken');

const SECRET_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzQyMTU0MDU1LCJleHAiOjE3NDQ3NDYwNTV9.gcfutO1xuTexYttBgvmMpkkGTEs5ahFa0tLka5tTDcY';

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞
exports.verifyToken = (req, res, next) => {
    console.log('üîπ –ó–∞–≥–æ–ª–æ–≤–æ–∫ Authorization:', req.headers.authorization);

    const token = req.headers.authorization?.split(' ')[1];

    if (!token) {
        console.log('‚ùå –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç!');
        return res.status(403).json({ error: '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω! –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω.' });
    }

    try {
        const decoded = jwt.verify(token, SECRET_KEY);
        console.log('‚úÖ –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–æ–∫–µ–Ω:', decoded);
        req.user = decoded;
        next();
    } catch (err) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–æ–∫–µ–Ω–∞:', err.message);
        res.status(401).json({ error: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω' });
    }
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
exports.isAdmin = (req, res, next) => {
    console.log('üîπ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', req.user.role);

    if (req.user.role !== 'admin') {
        return res.status(403).json({ error: '–¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ!' });
    }
    next();
};
